/**
 * ProfileÊ®°Âùó - Êï∞ÊçÆËΩ¨Êç¢Â∑•ÂÖ∑
 * 
 * ÂäüËÉΩÔºö
 * - ÂêéÁ´ØUserProfileVO ‚Üí ÂâçÁ´ØUserProfile
 * - ÂêéÁ´ØUserStatsVO ‚Üí ÂâçÁ´ØÁªüËÆ°Êï∞ÊçÆ
 * - ÂêéÁ´ØUserOccupationVO ‚Üí ÂâçÁ´ØËÅå‰∏öÊ†áÁ≠æ
 * - Êó∂Èó¥Ê†ºÂºèËΩ¨Êç¢
 * - Êï∞ÊçÆÊ†ºÂºèÂåñ
 */

import type {
  OccupationDictVO,
  UserOccupationVO,
  UserProfileVO,
  UserStatsVO,
} from '@/services/api/profileApi';
import type { SkillItem, UserProfile } from '../types';

// ==================== Áî®Êà∑ËµÑÊñôËΩ¨Êç¢ ====================

/**
 * Â∞ÜÂêéÁ´ØUserProfileVOËΩ¨Êç¢‰∏∫ÂâçÁ´ØUserProfile
 */
export const transformUserProfileVOToProfile = (
  vo: UserProfileVO
): UserProfile => {
  return {
    id: String(vo.userId),
    nickname: vo.nickname,
    avatar: vo.avatar,
    backgroundImage: vo.backgroundImage,
    
    // Âü∫Êú¨‰ø°ÊÅØ
    gender: mapGender(vo.gender),
    age: vo.age,
    birthday: vo.birthday,
    bio: vo.bio,
    
    // ‰ΩçÁΩÆ‰ø°ÊÅØ
    location: vo.location || vo.cityName,
    city: vo.cityName,
    district: vo.address,
    ipLocation: vo.ipLocation,
    
    // ËÅîÁ≥ªÊñπÂºè
    wechat: vo.canViewWechat ? vo.wechat : vo.wechatMasked,
    wechatLocked: vo.wechatUnlockCondition !== 0,
    
    // Ë∫´‰Ωì‰ø°ÊÅØ
    height: vo.height,
    weight: vo.weight,
    
    // ËÅå‰∏ö‰ø°ÊÅØ
    occupations: vo.occupations?.map(o => o.occupationName) || [],
    
    // ËÆ§ËØÅÊ†áËØÜ
    isRealVerified: vo.isRealVerified,
    isGodVerified: vo.isGodVerified,
    isVip: vo.isVip,
    vipLevel: vo.vipLevel,
    
    // Âú®Á∫øÁä∂ÊÄÅ
    isOnline: vo.isOnline,
    onlineStatus: vo.onlineStatus,
    
    // ÁªüËÆ°Êï∞ÊçÆÔºàÊù•Ëá™statsÂ≠óÊÆµÔºâ
    followingCount: vo.stats?.followingCount || 0,
    followerCount: vo.stats?.followerCount || 0,
    likeCount: vo.stats?.totalLikeCount || 0,
    collectCount: vo.stats?.totalCollectCount || 0,
    
    // Êó∂Èó¥
    createdAt: parseBackendDateTime(vo.createdAt),
    lastActiveAt: vo.lastOnlineTime ? parseBackendDateTime(vo.lastOnlineTime) : undefined,
  };
};

/**
 * ÊÄßÂà´Êò†Â∞Ñ
 * ÂêéÁ´Ø: 0=Êú™ËÆæÁΩÆ, 1=Áî∑, 2=Â•≥, 3=ÂÖ∂‰ªñ
 * ÂâçÁ´Ø: 'male' | 'female'
 */
const mapGender = (gender: number): 'male' | 'female' | undefined => {
  if (gender === 1) return 'male';
  if (gender === 2) return 'female';
  return undefined;
};

/**
 * ÊÄßÂà´ÂèçÂêëÊò†Â∞Ñ
 * ÂâçÁ´Ø: 'male' | 'female'
 * ÂêéÁ´Ø: 1=Áî∑, 2=Â•≥
 */
export const mapGenderToBackend = (gender?: 'male' | 'female'): number => {
  if (gender === 'male') return 1;
  if (gender === 'female') return 2;
  return 0;  // Êú™ËÆæÁΩÆ
};

// ==================== ËÅå‰∏öÊ†áÁ≠æËΩ¨Êç¢ ====================

/**
 * Â∞ÜÂêéÁ´ØUserOccupationVOËΩ¨Êç¢‰∏∫ÂâçÁ´ØSkillItem
 */
export const transformOccupationToSkill = (
  occupation: UserOccupationVO
): SkillItem => {
  return {
    id: String(occupation.id),
    name: occupation.occupationName,
    icon: occupation.iconUrl || getOccupationIcon(occupation.occupationCode),
    type: occupation.category === 'game' ? 'game' : 'lifestyle',
  };
};

/**
 * ÊâπÈáèËΩ¨Êç¢ËÅå‰∏öÂàóË°®
 */
export const transformOccupationList = (
  occupations: UserOccupationVO[]
): SkillItem[] => {
  return occupations.map(transformOccupationToSkill);
};

/**
 * Â∞ÜËÅå‰∏öÂ≠óÂÖ∏VOËΩ¨Êç¢‰∏∫SkillItem
 */
export const transformOccupationDictToSkill = (
  dict: OccupationDictVO
): SkillItem => {
  return {
    id: dict.code,
    name: dict.name,
    icon: dict.iconUrl || getOccupationIcon(dict.code),
    type: dict.category === 'game' ? 'game' : 'lifestyle',
  };
};

/**
 * Ëé∑ÂèñËÅå‰∏öÂõæÊ†áÔºàÊ†πÊçÆÁºñÁ†ÅÔºâ
 */
const getOccupationIcon = (code: string): string => {
  const iconMap: Record<string, string> = {
    // Ê∏∏ÊàèÁõ∏ÂÖ≥
    honor_of_kings: 'üéÆ',
    league_of_legends: 'üéÆ',
    pubg_mobile: 'üéÆ',
    brawl_stars: 'üéÆ',
    
    // ÁîüÊ¥ªÊúçÂä°
    model: 'üëó',
    student: 'üìö',
    office_worker: 'üíº',
    freelancer: 'üíª',
    explore_shop: 'üè™',
    ktv: 'üé§',
    massage: 'üíÜ',
    billiards: 'üé±',
    
    // ÈªòËÆ§
    default: 'üè∑Ô∏è',
  };
  
  return iconMap[code] || iconMap.default;
};

// ==================== Êó∂Èó¥ËΩ¨Êç¢Â∑•ÂÖ∑ ====================

/**
 * Ëß£ÊûêÂêéÁ´ØÊó∂Èó¥Â≠óÁ¨¶‰∏≤‰∏∫Êó∂Èó¥Êà≥
 * ÂêéÁ´ØÊ†ºÂºèÔºöISO 8601 "2019-08-24T14:15:22Z"
 */
export const parseBackendDateTime = (dateTimeStr: string): number => {
  const date = new Date(dateTimeStr);
  return date.getTime();
};

/**
 * Ê†ºÂºèÂåñÊó∂Èó¥‰∏∫ÊòæÁ§∫Ê†ºÂºè
 */
export const formatDateTime = (timestamp: number): string => {
  const date = new Date(timestamp);
  return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`;
};

/**
 * Ê†ºÂºèÂåñÁõ∏ÂØπÊó∂Èó¥
 */
export const formatRelativeTime = (timestamp: number): string => {
  const now = Date.now();
  const diff = now - timestamp;
  
  const minute = 60 * 1000;
  const hour = 60 * minute;
  const day = 24 * hour;
  
  if (diff < minute) {
    return 'ÂàöÂàö';
  } else if (diff < hour) {
    return `${Math.floor(diff / minute)}ÂàÜÈíüÂâç`;
  } else if (diff < day) {
    return `${Math.floor(diff / hour)}Â∞èÊó∂Ââç`;
  } else if (diff < 7 * day) {
    return `${Math.floor(diff / day)}Â§©Ââç`;
  } else {
    const date = new Date(timestamp);
    return `${date.getMonth() + 1}-${date.getDate()}`;
  }
};

// ==================== Êï∞Â≠óÊ†ºÂºèÂåñÂ∑•ÂÖ∑ ====================

/**
 * Ê†ºÂºèÂåñÊï∞Â≠óÔºà1000+ ‚Üí 1k, 10000+ ‚Üí 1wÔºâ
 */
export const formatNumber = (num: number): string => {
  if (num >= 10000) {
    return `${(num / 10000).toFixed(1)}w`;
  }
  if (num >= 1000) {
    return `${(num / 1000).toFixed(1)}k`;
  }
  return num.toString();
};

/**
 * Ê†ºÂºèÂåñË∑ùÁ¶ªÔºàÁ±≥ ‚Üí ÊñáÂ≠óÊèèËø∞Ôºâ
 */
export const formatDistance = (meters: number): string => {
  if (meters < 1000) {
    return `${Math.floor(meters)}m`;
  }
  return `${(meters / 1000).toFixed(1)}km`;
};

/**
 * Ê†ºÂºèÂåñBMIÁ≠âÁ∫ß
 */
export const formatBMILevel = (bmi: number): string => {
  if (bmi < 18.5) return 'ÂÅèÁò¶';
  if (bmi < 24) return 'Ê≠£Â∏∏';
  if (bmi < 28) return 'ÂÅèËÉñ';
  return 'ËÇ•ËÉñ';
};

/**
 * Ê†ºÂºèÂåñËµÑÊñôÂÆåÊï¥Â∫¶Á≠âÁ∫ß
 */
export const formatCompletenessLevel = (score: number): string => {
  if (score >= 80) return '‰ºòÁßÄ';
  if (score >= 60) return 'ËâØÂ•Ω';
  if (score >= 40) return '‰∏ÄËà¨';
  if (score >= 20) return 'ËæÉÂ∑Æ';
  return 'ÊûÅÂ∑Æ';
};

// ==================== ÂØºÂá∫ ====================

export const profileDataTransform = {
  transformUserProfileVOToProfile,
  transformOccupationToSkill,
  transformOccupationList,
  transformOccupationDictToSkill,
  mapGenderToBackend,
  parseBackendDateTime,
  formatDateTime,
  formatRelativeTime,
  formatNumber,
  formatDistance,
  formatBMILevel,
  formatCompletenessLevel,
};

